# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
parameters:
    oauth_token_url: /oauth/v2/token
    oauth_auth_url: /oauth/v2/auth
    oauth_auth_login_url: /oauth/v2/auth_login
    oauth_auth_logout_url: /oauth/v2/auth_logout
    oauth_check_url: /oauth/v2/auth_check

security:

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            anonymous: true

        doc:
            pattern: ^/doc$
            http_basic:
                realm: "Secured area"
#
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        oauth_authorize:
            pattern:    ^/oauth/v2/auth|^/oauth/v2/user
            form_login:
                provider: fos_userbundle
                login_path: '%oauth_auth_login_url%'
                check_path: '%oauth_check_url%'
            logout:
                path:   '%oauth_auth_logout_url%'
                target: '%oauth_auth_login_url%'
            anonymous:    true

        secured_area:
#            pattern: ^/login
            anonymous: ~
            oauth:
                resource_owners:
                    facebook:           "/login/check-facebook"
#                    google:             "/login/check-google"
#                    my_custom_provider: "/login/check-custom"
#                    my_github:          "/login/check-github"
                login_path:        /login/
                failure_path:      /login/
                oauth_user_provider:
                    service: hwi_oauth.user.provider.entity
#
#        api:
#            pattern:    ^/
#            fos_oauth:  true
#            stateless:  true
#            security:   true
#            anonymous:  false

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/oauth/v2/auth_login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/oauth/v2/user/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/oauth/v2/user/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/, roles: [ IS_AUTHENTICATED_FULLY ]
